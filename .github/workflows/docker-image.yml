# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Publish Docker image

on:
  push:
    branches:
      - main
    tags:
      - '*.*.*'
  pull_request:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  TEST_IMAGE: plextraktsync:ci-test

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set version variable
        id: vars
        run: |
          if [[ "${GITHUB_REF#refs/heads/}" = "${GITHUB_REF}" ]]; then
            APP_VERSION=${GITHUB_REF#refs/tags/}
          else
            git fetch --tags --unshallow
            APP_VERSION=$(git describe --tags)_${GITHUB_REF#refs/heads/}
          fi
          echo "version=$APP_VERSION" >> $GITHUB_OUTPUT

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}},enable=${{ !startsWith(github.ref, 'refs/tags/0.') }}

      - name: Build and export to Docker
        uses: docker/build-push-action@v4
        env:
          APP_VERSION: ${{ steps.vars.outputs.version }}
        with:
          context: .
          load: true
          tags: ${{ env.TEST_IMAGE }}
          build-args: |
            APP_VERSION=${{ env.APP_VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test Docker image
        run: |
          docker run --rm ${{ env.TEST_IMAGE }} info

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        # Run this only on tags and main branch
        if: ${{ github.event_name != 'pull_request' }}
        env:
          APP_VERSION: ${{ steps.vars.outputs.version }}
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            APP_VERSION=${{ env.APP_VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

# vim:ts=2:sw=2:et
